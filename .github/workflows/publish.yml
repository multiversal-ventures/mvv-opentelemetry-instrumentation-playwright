name: Publish Python Package

on:
  release:
    types: [created]

jobs:
  build:
    name: Build Artifacts
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      run: curl -LsSf https://astral.sh/uv/install.sh | sh
    - name: Cache uv and .venv
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-test-${{ hashFiles('pyproject.toml', 'uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-
    - name: Install dependencies
      run: uv sync --locked
    - name: Build
      run: uv build
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: playwright-otel-instrumentor-${{ matrix.os }}
        path: dist/*

  publish:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/mvv-opentelemetry-instrumentation-playwright
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        merge-multiple: true
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
    - name: Attach Artifact to GitHub Releases
      run: gh release upload ${{ github.ref_name }} ./dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN  }}
